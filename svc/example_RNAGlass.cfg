[general]
# Test with simulated data (True/False)
simulate = True
# Run a small smoke test with only 10 datapoints (True/False).
small = False
# Random number generator seed (int).
rng_seed = 0
# Save results, including plots (True/False).
save = True
# Folder in which to save results (path).
out_folder = results
# Make a time-stamped subfolder in the out_folder (True/False).
make_subfolder = True
# Use GPU (True/False).
cuda = False
# Store the full dataset on the CPU instead of on the GPU to reduce memory
# usage (True/False).
cpu_data = False
# Pin memory on the CPU for faster transfer to the GPU (True/False).
pin_memory = False


[data]
# Input data. Must be pickle file, with the first entry the dataset as a numpy
# array, and the second entry a list of gene names.
file =

[model]
# Mean of the prior for the on/off threshold mu (float).
prior_gene_mean_mn = 0
# Standard deviation of the prior on the on/off threshold mu (float)
prior_gene_mean_sd = 1
# Mean of the prior for the on/off logistic rate tau (float).
prior_gene_scale_mn = 0
# Standard deviation of the prior for the on/off logistic rate tau (float).
prior_gene_scale_sd = 1
# Lower bound on the on/off logistic rate tau (float).
prior_gene_scale_lbound = 0.1
# Standard deviation of the prior on the single-gene energies H (float).
prior_glass_h_sd = 1
# Standard deviation of the prior on the pairwise gene energies J (float).
prior_glass_J_scale = 0.1

[nksd]
# The c parameter of the factored IMQ kernel.
kernel_c = 1.0
# The beta parameter of the factored IMQ kernel.
kernel_beta = -0.5
# The T parameter of the SVC.
nksd_T = 0.05

[svc]
# The D parameter of the Pitman-Yor mixture model expression for m_B (float).
PY_mix_d = 2000
# The theta concentration parameter of the Pitman-Yor mixture model expression
# for m_B (float).
PY_conc = 1

[train]
# Minibatch size.
batch_size = 100
# Learning rate for the Adam optimizer.
learning_rate = 0.01
# Number of epochs.
n_epochs = 60
# Whether to jit compile the ELBO for speed (True/False).
jit = True
# Number of samples for the LOORF estimator.
loorf_samples = 8
# Initial value of the logit of the selection probabilities (float).
loorf_init = 1.0
# Stop early using the Grathwohl et al. stopping rule (True/False)
early_stop = True
# Number of steps to average over for computing the Grathwohl et al.
# stopping rule (int).
smooth_wind = 100
# Nb. we do not use the below options in the paper and they
# should be left at the default values.
# Don't perform data selection and just estimate the SVC on the
# full dataset (True/False).
select_all = False
# Milestones for pytorch's optimization scheduler (list of ints).
milestones = []
# Gamma for pytorch's optimization scheduler (float).
learning_gamma = 1.0

[results]
